steps:
  - name: 'maven:3.9.9-eclipse-temurin-21'
    entrypoint: 'mvn'
    args: ['clean', 'package', '-DskipTests']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/fresh-bloom-438819-i4/spring-boot-rest:${SHORT_SHA}'
      - '-f'
      - './Dockerfile'
      - '.'

  - name: 'google/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud app deploy app.yaml --quiet || { echo 'Deployment failed' ; exit 1; }

  # Terraform step (initialize and apply)
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd terraform && terraform init -upgrade && terraform plan -var-file='terraform.tfvars' && terraform apply -auto-approve -var-file='terraform.tfvars' || { echo 'Terraform apply failed' ; exit 1; }

  # Package the proxy files
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        zip -r proxy.zip proxy/ || { echo 'Zipping failed'; exit 1; }

  # Deploy API Proxy to Apigee
  - name: 'curlimages/curl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        curl -X POST \
        -H "Authorization: Bearer $(gcloud auth print-access-token)" \
        -H "Content-Type: application/octet-stream" \
        --data-binary @proxy.zip \
        "https://api.enterprise.apigee.com/v1/organizations/YOUR_ORG_NAME/apis?action=deploy" || { echo 'API proxy deployment failed'; exit 1; }


options:
  logging: CLOUD_LOGGING_ONLY

images:
  - gcr.io/fresh-bloom-438819-i4/spring-boot-rest:${SHORT_SHA}